
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftPLUSMINUSleftTIMESDIVIDEAND ATTACK COMMENT DEFEND DIVIDE ELSE FOR IDENTIFIER IF JUMP LBRACE LPAREN MINUS MOVE_DOWN MOVE_LEFT MOVE_RIGHT MOVE_UP NOT NUMBER OR PLUS RBRACE RPAREN SEMICOLON TIMES WHILES : cmd\n         | if_stmt\n         | while_stmt\n         | for_stmt\n         cmd : move_cmd\n           | action_cmdmove_cmd : MOVE_UP\n                | MOVE_DOWN\n                | MOVE_LEFT\n                | MOVE_RIGHTaction_cmd : JUMP\n                  | ATTACK\n                  | DEFENDif_stmt : IF LPAREN expr RPAREN LBRACE S RBRACE ELSE LBRACE S RBRACEwhile_stmt : WHILE LPAREN expr RPAREN LBRACE S RBRACEfor_stmt : FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN LBRACE S RBRACEexpr : IDENTIFIER\n            | NUMBER\n            | expr PLUS expr\n            | expr MINUS expr\n            '
    
_lr_action_items = {'IF':([0,31,34,44,45,],[8,8,8,8,8,]),'WHILE':([0,31,34,44,45,],[9,9,9,9,9,]),'FOR':([0,31,34,44,45,],[10,10,10,10,10,]),'MOVE_UP':([0,31,34,44,45,],[11,11,11,11,11,]),'MOVE_DOWN':([0,31,34,44,45,],[12,12,12,12,12,]),'MOVE_LEFT':([0,31,34,44,45,],[13,13,13,13,13,]),'MOVE_RIGHT':([0,31,34,44,45,],[14,14,14,14,14,]),'JUMP':([0,31,34,44,45,],[15,15,15,15,15,]),'ATTACK':([0,31,34,44,45,],[16,16,16,16,16,]),'DEFEND':([0,31,34,44,45,],[17,17,17,17,17,]),'$end':([1,2,3,4,5,6,7,11,12,13,14,15,16,17,40,48,49,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-14,-16,]),'RBRACE':([2,3,4,5,6,7,11,12,13,14,15,16,17,36,37,40,46,47,48,49,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,39,40,-15,48,49,-14,-16,]),'LPAREN':([8,9,10,],[18,19,20,]),'IDENTIFIER':([18,19,20,27,28,30,38,],[22,22,22,22,22,22,22,]),'NUMBER':([18,19,20,27,28,30,38,],[23,23,23,23,23,23,23,]),'RPAREN':([21,22,23,24,32,33,41,],[26,-17,-18,29,-19,-20,43,]),'PLUS':([21,22,23,24,25,32,33,35,41,],[27,-17,-18,27,27,-19,-20,27,27,]),'MINUS':([21,22,23,24,25,32,33,35,41,],[28,-17,-18,28,28,-19,-20,28,28,]),'SEMICOLON':([22,23,25,32,33,35,],[-17,-18,30,-19,-20,38,]),'LBRACE':([26,29,42,43,],[31,34,44,45,]),'ELSE':([39,],[42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,31,34,44,45,],[1,36,37,46,47,]),'cmd':([0,31,34,44,45,],[2,2,2,2,2,]),'if_stmt':([0,31,34,44,45,],[3,3,3,3,3,]),'while_stmt':([0,31,34,44,45,],[4,4,4,4,4,]),'for_stmt':([0,31,34,44,45,],[5,5,5,5,5,]),'move_cmd':([0,31,34,44,45,],[6,6,6,6,6,]),'action_cmd':([0,31,34,44,45,],[7,7,7,7,7,]),'expr':([18,19,20,27,28,30,38,],[21,24,25,32,33,35,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> cmd','S',1,'p_S','parser.py',17),
  ('S -> if_stmt','S',1,'p_S','parser.py',18),
  ('S -> while_stmt','S',1,'p_S','parser.py',19),
  ('S -> for_stmt','S',1,'p_S','parser.py',20),
  ('cmd -> move_cmd','cmd',1,'p_cmd','parser.py',25),
  ('cmd -> action_cmd','cmd',1,'p_cmd','parser.py',26),
  ('move_cmd -> MOVE_UP','move_cmd',1,'p_move_cmd','parser.py',30),
  ('move_cmd -> MOVE_DOWN','move_cmd',1,'p_move_cmd','parser.py',31),
  ('move_cmd -> MOVE_LEFT','move_cmd',1,'p_move_cmd','parser.py',32),
  ('move_cmd -> MOVE_RIGHT','move_cmd',1,'p_move_cmd','parser.py',33),
  ('action_cmd -> JUMP','action_cmd',1,'p_action_cmd','parser.py',37),
  ('action_cmd -> ATTACK','action_cmd',1,'p_action_cmd','parser.py',38),
  ('action_cmd -> DEFEND','action_cmd',1,'p_action_cmd','parser.py',39),
  ('if_stmt -> IF LPAREN expr RPAREN LBRACE S RBRACE ELSE LBRACE S RBRACE','if_stmt',11,'p_if_stmt','parser.py',43),
  ('while_stmt -> WHILE LPAREN expr RPAREN LBRACE S RBRACE','while_stmt',7,'p_while_stmt','parser.py',47),
  ('for_stmt -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN LBRACE S RBRACE','for_stmt',11,'p_for_stmt','parser.py',51),
  ('expr -> IDENTIFIER','expr',1,'p_expr','parser.py',55),
  ('expr -> NUMBER','expr',1,'p_expr','parser.py',56),
  ('expr -> expr PLUS expr','expr',3,'p_expr','parser.py',57),
  ('expr -> expr MINUS expr','expr',3,'p_expr','parser.py',58),
]
