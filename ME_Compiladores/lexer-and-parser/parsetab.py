
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARROW ATTACK COMMENT DEFEND DIVIDE ELSE FOR IDENTIFIER IF JUMP LBRACE LPAREN MINUS MOVE_DOWN MOVE_LEFT MOVE_RIGHT MOVE_UP NOT NUMBER OR PLUS RBRACE RPAREN SEMICOLON TIMES WHILES : cmd\n         | cmd S\n         | if_stmt\n         | if_stmt S\n         | while_stmt\n         | while_stmt S\n         | for_stmt\n         | for_stmt S\n         | expr\n         | expr S\n         | empty\n         empty :cmd : move_cmd\n           | action_cmdmove_cmd : MOVE_UP\n                | MOVE_DOWN\n                | MOVE_LEFT\n                | MOVE_RIGHTaction_cmd : JUMP\n                  | ATTACK\n                  | DEFENDif_stmt : IF LPAREN expr RPAREN LBRACE S RBRACE ELSE LBRACE S RBRACEwhile_stmt : WHILE LPAREN expr RPAREN LBRACE S RBRACEfor_stmt : FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN LBRACE S RBRACEexpr : IDENTIFIER\n            | NUMBER\n            | expr PLUS expr\n            | expr MINUS expr\n            | expr TIMES expr\n            | expr DIVIDE expr\n            | expr ARROW expr\n            | expr AND expr\n            | expr OR expr\n            | NOT expr'
    
_lr_action_items = {'IF':([0,2,3,4,5,6,8,9,13,14,16,17,18,19,20,21,22,38,39,40,41,42,43,44,45,52,53,59,63,64,67,68,],[10,10,10,10,10,10,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-34,-27,-28,-29,-30,-31,-32,-33,10,10,-23,10,10,-22,-24,]),'WHILE':([0,2,3,4,5,6,8,9,13,14,16,17,18,19,20,21,22,38,39,40,41,42,43,44,45,52,53,59,63,64,67,68,],[11,11,11,11,11,11,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-34,-27,-28,-29,-30,-31,-32,-33,11,11,-23,11,11,-22,-24,]),'FOR':([0,2,3,4,5,6,8,9,13,14,16,17,18,19,20,21,22,38,39,40,41,42,43,44,45,52,53,59,63,64,67,68,],[12,12,12,12,12,12,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-34,-27,-28,-29,-30,-31,-32,-33,12,12,-23,12,12,-22,-24,]),'IDENTIFIER':([0,2,3,4,5,6,8,9,13,14,15,16,17,18,19,20,21,22,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,52,53,57,59,63,64,67,68,],[13,13,13,13,13,13,-13,-14,-25,-26,13,-15,-16,-17,-18,-19,-20,-21,13,13,13,13,13,13,13,13,13,13,-34,-27,-28,-29,-30,-31,-32,-33,13,13,13,13,-23,13,13,-22,-24,]),'NUMBER':([0,2,3,4,5,6,8,9,13,14,15,16,17,18,19,20,21,22,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,52,53,57,59,63,64,67,68,],[14,14,14,14,14,14,-13,-14,-25,-26,14,-15,-16,-17,-18,-19,-20,-21,14,14,14,14,14,14,14,14,14,14,-34,-27,-28,-29,-30,-31,-32,-33,14,14,14,14,-23,14,14,-22,-24,]),'NOT':([0,2,3,4,5,6,8,9,13,14,15,16,17,18,19,20,21,22,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,52,53,57,59,63,64,67,68,],[15,15,15,15,15,15,-13,-14,-25,-26,15,-15,-16,-17,-18,-19,-20,-21,15,15,15,15,15,15,15,15,15,15,-34,-27,-28,-29,-30,-31,-32,-33,15,15,15,15,-23,15,15,-22,-24,]),'$end':([0,1,2,3,4,5,6,7,8,9,13,14,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,42,43,44,45,59,67,68,],[-12,0,-1,-3,-5,-7,-9,-11,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-2,-4,-6,-8,-10,-34,-27,-28,-29,-30,-31,-32,-33,-23,-22,-24,]),'MOVE_UP':([0,2,3,4,5,6,8,9,13,14,16,17,18,19,20,21,22,38,39,40,41,42,43,44,45,52,53,59,63,64,67,68,],[16,16,16,16,16,16,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-34,-27,-28,-29,-30,-31,-32,-33,16,16,-23,16,16,-22,-24,]),'MOVE_DOWN':([0,2,3,4,5,6,8,9,13,14,16,17,18,19,20,21,22,38,39,40,41,42,43,44,45,52,53,59,63,64,67,68,],[17,17,17,17,17,17,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-34,-27,-28,-29,-30,-31,-32,-33,17,17,-23,17,17,-22,-24,]),'MOVE_LEFT':([0,2,3,4,5,6,8,9,13,14,16,17,18,19,20,21,22,38,39,40,41,42,43,44,45,52,53,59,63,64,67,68,],[18,18,18,18,18,18,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-34,-27,-28,-29,-30,-31,-32,-33,18,18,-23,18,18,-22,-24,]),'MOVE_RIGHT':([0,2,3,4,5,6,8,9,13,14,16,17,18,19,20,21,22,38,39,40,41,42,43,44,45,52,53,59,63,64,67,68,],[19,19,19,19,19,19,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-34,-27,-28,-29,-30,-31,-32,-33,19,19,-23,19,19,-22,-24,]),'JUMP':([0,2,3,4,5,6,8,9,13,14,16,17,18,19,20,21,22,38,39,40,41,42,43,44,45,52,53,59,63,64,67,68,],[20,20,20,20,20,20,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-34,-27,-28,-29,-30,-31,-32,-33,20,20,-23,20,20,-22,-24,]),'ATTACK':([0,2,3,4,5,6,8,9,13,14,16,17,18,19,20,21,22,38,39,40,41,42,43,44,45,52,53,59,63,64,67,68,],[21,21,21,21,21,21,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-34,-27,-28,-29,-30,-31,-32,-33,21,21,-23,21,21,-22,-24,]),'DEFEND':([0,2,3,4,5,6,8,9,13,14,16,17,18,19,20,21,22,38,39,40,41,42,43,44,45,52,53,59,63,64,67,68,],[22,22,22,22,22,22,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-34,-27,-28,-29,-30,-31,-32,-33,22,22,-23,22,22,-22,-24,]),'RBRACE':([2,3,4,5,6,7,8,9,13,14,16,17,18,19,20,21,22,23,24,25,26,27,38,39,40,41,42,43,44,45,52,53,55,56,59,63,64,65,66,67,68,],[-1,-3,-5,-7,-9,-11,-13,-14,-25,-26,-15,-16,-17,-18,-19,-20,-21,-2,-4,-6,-8,-10,-34,-27,-28,-29,-30,-31,-32,-33,-12,-12,58,59,-23,-12,-12,67,68,-22,-24,]),'PLUS':([6,13,14,38,39,40,41,42,43,44,45,46,47,48,54,60,],[28,-25,-26,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'MINUS':([6,13,14,38,39,40,41,42,43,44,45,46,47,48,54,60,],[29,-25,-26,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TIMES':([6,13,14,38,39,40,41,42,43,44,45,46,47,48,54,60,],[30,-25,-26,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'DIVIDE':([6,13,14,38,39,40,41,42,43,44,45,46,47,48,54,60,],[31,-25,-26,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'ARROW':([6,13,14,38,39,40,41,42,43,44,45,46,47,48,54,60,],[32,-25,-26,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'AND':([6,13,14,38,39,40,41,42,43,44,45,46,47,48,54,60,],[33,-25,-26,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'OR':([6,13,14,38,39,40,41,42,43,44,45,46,47,48,54,60,],[34,-25,-26,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'LPAREN':([10,11,12,],[35,36,37,]),'RPAREN':([13,14,38,39,40,41,42,43,44,45,46,47,60,],[-25,-26,-34,-27,-28,-29,-30,-31,-32,-33,49,50,62,]),'SEMICOLON':([13,14,38,39,40,41,42,43,44,45,48,54,],[-25,-26,-34,-27,-28,-29,-30,-31,-32,-33,51,57,]),'LBRACE':([49,50,61,62,],[52,53,63,64,]),'ELSE':([58,],[61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,2,3,4,5,6,52,53,63,64,],[1,23,24,25,26,27,55,56,65,66,]),'cmd':([0,2,3,4,5,6,52,53,63,64,],[2,2,2,2,2,2,2,2,2,2,]),'if_stmt':([0,2,3,4,5,6,52,53,63,64,],[3,3,3,3,3,3,3,3,3,3,]),'while_stmt':([0,2,3,4,5,6,52,53,63,64,],[4,4,4,4,4,4,4,4,4,4,]),'for_stmt':([0,2,3,4,5,6,52,53,63,64,],[5,5,5,5,5,5,5,5,5,5,]),'expr':([0,2,3,4,5,6,15,28,29,30,31,32,33,34,35,36,37,51,52,53,57,63,64,],[6,6,6,6,6,6,38,39,40,41,42,43,44,45,46,47,48,54,6,6,60,6,6,]),'empty':([0,2,3,4,5,6,52,53,63,64,],[7,7,7,7,7,7,7,7,7,7,]),'move_cmd':([0,2,3,4,5,6,52,53,63,64,],[8,8,8,8,8,8,8,8,8,8,]),'action_cmd':([0,2,3,4,5,6,52,53,63,64,],[9,9,9,9,9,9,9,9,9,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> cmd','S',1,'p_S','parser.py',8),
  ('S -> cmd S','S',2,'p_S','parser.py',9),
  ('S -> if_stmt','S',1,'p_S','parser.py',10),
  ('S -> if_stmt S','S',2,'p_S','parser.py',11),
  ('S -> while_stmt','S',1,'p_S','parser.py',12),
  ('S -> while_stmt S','S',2,'p_S','parser.py',13),
  ('S -> for_stmt','S',1,'p_S','parser.py',14),
  ('S -> for_stmt S','S',2,'p_S','parser.py',15),
  ('S -> expr','S',1,'p_S','parser.py',16),
  ('S -> expr S','S',2,'p_S','parser.py',17),
  ('S -> empty','S',1,'p_S','parser.py',18),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',23),
  ('cmd -> move_cmd','cmd',1,'p_cmd','parser.py',27),
  ('cmd -> action_cmd','cmd',1,'p_cmd','parser.py',28),
  ('move_cmd -> MOVE_UP','move_cmd',1,'p_move_cmd','parser.py',32),
  ('move_cmd -> MOVE_DOWN','move_cmd',1,'p_move_cmd','parser.py',33),
  ('move_cmd -> MOVE_LEFT','move_cmd',1,'p_move_cmd','parser.py',34),
  ('move_cmd -> MOVE_RIGHT','move_cmd',1,'p_move_cmd','parser.py',35),
  ('action_cmd -> JUMP','action_cmd',1,'p_action_cmd','parser.py',39),
  ('action_cmd -> ATTACK','action_cmd',1,'p_action_cmd','parser.py',40),
  ('action_cmd -> DEFEND','action_cmd',1,'p_action_cmd','parser.py',41),
  ('if_stmt -> IF LPAREN expr RPAREN LBRACE S RBRACE ELSE LBRACE S RBRACE','if_stmt',11,'p_if_stmt','parser.py',45),
  ('while_stmt -> WHILE LPAREN expr RPAREN LBRACE S RBRACE','while_stmt',7,'p_while_stmt','parser.py',49),
  ('for_stmt -> FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN LBRACE S RBRACE','for_stmt',11,'p_for_stmt','parser.py',53),
  ('expr -> IDENTIFIER','expr',1,'p_expr','parser.py',57),
  ('expr -> NUMBER','expr',1,'p_expr','parser.py',58),
  ('expr -> expr PLUS expr','expr',3,'p_expr','parser.py',59),
  ('expr -> expr MINUS expr','expr',3,'p_expr','parser.py',60),
  ('expr -> expr TIMES expr','expr',3,'p_expr','parser.py',61),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','parser.py',62),
  ('expr -> expr ARROW expr','expr',3,'p_expr','parser.py',63),
  ('expr -> expr AND expr','expr',3,'p_expr','parser.py',64),
  ('expr -> expr OR expr','expr',3,'p_expr','parser.py',65),
  ('expr -> NOT expr','expr',2,'p_expr','parser.py',66),
]
